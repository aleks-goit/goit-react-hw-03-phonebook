{"version":3,"sources":["components/Layout/Layout.js","components/Filter/Filter.js","components/ContactForm/ContactFrom.js","components/ContactsListItem/ContactListItem.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js"],"names":["Section","styled","section","Layout","children","FilterContainer","div","InputLabel","label","FilterInput","input","Filter","value","onChangeFilter","type","onChange","e","target","PhonebookForm","form","PhonebookInput","PhonebookButton","button","ContactForm","state","name","number","handleInputChange","event","setState","handleFormSubmit","preventDefault","props","onAddContact","this","onSubmit","required","Component","ContactItem","li","ContactButton","ContactListItem","id","onDelete","onClick","ContactsList","contacts","onDeleteContact","map","key","Title","h2","App","filter","handleContactAdd","contact","some","item","alert","contactData","uuidv4","prevState","handleChangeFilter","handleDeleteContact","contactId","filterContacts","toLowerCase","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e9d8ed6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes, { object } from 'prop-types';\r\n\r\nconst Section = styled.section`\r\n    width: 350px;\r\n    margin: 0 auto;\r\n    padding-top: 40px;\r\n`;\r\n\r\nfunction Layout({children}) {\r\n    return (\r\n        <Section>\r\n            {children}\r\n        </Section>\r\n    )\r\n}\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.arrayOf(object),\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FilterContainer = styled.div`\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n  font-size: 18px;\r\n`;\r\n\r\nconst FilterInput = styled.input`\r\n  border: 2px solid #797d7f;\r\n  border-radius: 5px;\r\n  height: 30px;\r\n`;\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <FilterContainer>\r\n      <InputLabel>\r\n        Search contacts by name\r\n        <FilterInput\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </InputLabel>\r\n    </FilterContainer>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PhonebookForm = styled.form`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PhonebookInput = styled.input`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-bottom: 10px;\r\n  width: 95%;\r\n  height: 30px;\r\n  border-radius: 5px;\r\n  border: 2px solid #797D7F;\r\n`;\r\n\r\nconst PhonebookButton = styled.button`\r\n  padding: 5px;\r\n  background-color: #2ECC71;\r\n  border-radius: 5px;\r\n  border: none;\r\n  color: #fff;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  outline: none;\r\n`;\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  }\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <PhonebookForm onSubmit={this.handleFormSubmit}>\r\n        <label>\r\n          Name\r\n          <PhonebookInput\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <PhonebookInput\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <PhonebookButton type=\"submit\">Add contact</PhonebookButton>\r\n      </PhonebookForm>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes, { func } from 'prop-types';\r\n\r\nconst ContactItem = styled.li`\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst ContactButton = styled.button`\r\n  padding: 5px;\r\n  background-color: #E74C3C;\r\n  border-radius: 10px;\r\n  border: none;\r\n  color: #fff;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  outline: none;\r\n`;\r\n\r\nfunction ContactListItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <ContactItem>\r\n      <span>\r\n        {name}: {number}\r\n      </span>\r\n      <ContactButton type=\"button\" onClick={onDelete}>\r\n        Delete\r\n      </ContactButton>\r\n    </ContactItem>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: func,\r\n}\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from '../ContactsListItem/ContactListItem';\r\nimport PropTypes, { object } from 'prop-types';\r\n\r\nfunction ContactsList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(object),\r\n  onDeleteContact: PropTypes.func,\r\n}\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport Layout from '../Layout/Layout';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactForm from '../ContactForm/ContactFrom';\r\nimport ContactsList from '../ContactsList/ContactsList';\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 10px;\r\n  font-size: 24px;\r\n  text-align: center;\r\n`;\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    const savedContacts = localStorage.getItem('contacts');\r\n\r\n    if(savedContacts){\r\n      this.setState({contacts: JSON.parse(savedContacts)});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(prevState.contacts !== this.state.contacts){\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleContactAdd = contact => {\r\n    const { contacts } = this.state;\r\n\r\n    const isIncludes = contacts.some(item => item.name === contact.name);\r\n    if (isIncludes) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    const contactData = {\r\n      id: uuidv4(),\r\n      name: contact.name,\r\n      number: contact.number,\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contactData],\r\n    }));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleChangeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  handleDeleteContact = contactId =>\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n\r\n    const contacts = this.filterContacts();\r\n    return (\r\n      <Layout>\r\n        <Title>Phonebook</Title>\r\n        <ContactForm onAddContact={this.handleContactAdd} />\r\n\r\n        <Title>Contacts</Title>\r\n        <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\r\n        <ContactsList\r\n          contacts={contacts}\r\n          onDeleteContact={this.handleDeleteContact}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './components/App/App';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}